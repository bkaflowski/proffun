cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

project(proffun)

set(CMAKE_BUILD_TYPE Release)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "build_cpp")

set(OUTDIR ${PROJECT_BINARY_DIR}/out)
set(SRC "src/main/cpp")

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" CX11_SUPPORTED)
if(CX11_SUPPORTED)
   SET(CMAKE_CXX_FLAGS "-std=c++11")
   MESSAGE(STATUS "SETTING -std=c++11 FLAG")
else()
   MESSAGE(STATUS "Compiler ${CMAKE_CXX_COMPILER doesnt support C++ 11")
endif()

find_package(JNI REQUIRED)
if(JNI_FOUND)
	MESSAGE (STATUS "JNI_INCLUDE_DIRS=${JNI_INCLUDE_DIRS}")
	MESSAGE (STATUS "JNI_LIBRARIES=${JNI_LIBRARIES}")
	MESSAGE (STATUS "JAVA_INCLUDE_PATH=${JAVA_INCLUDE_PATH}")
	MESSAGE (STATUS "JAVA_INCLUDE_PATH2=${JAVA_INCLUDE_PATH2}")
ENDIF()

INCLUDE_DIRECTORIES(${JAVA_INCLUDE_PATH})
INCLUDE_DIRECTORIES(${JAVA_INCLUDE_PATH2})

SET(SOURCE_FILES
	${SRC}/Profiler.cpp)
SET(SOURCE_FILES_NATIVE
    ${SRC}/proffun_NativeSend.cpp
    ${SRC}/proffun_NativeSend.h)

add_library(agent SHARED ${SOURCE_FILES})
add_library(nativesend SHARED ${SOURCE_FILES_NATIVE})
